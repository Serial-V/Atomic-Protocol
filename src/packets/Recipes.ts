
import type { LatinString } from "./LatinString";
import type { RecipeIngredient } from "./RecipeIngredient";
import type { ItemLegacy } from "./ItemLegacy";
import type { RecipeUnlockingRequirement } from "./RecipeUnlockingRequirement";

export type Recipes = {  type: "shapeless" | "shaped" | "furnace" | "furnace_with_metadata" | "multi" | "shulker_box" | "shapeless_chemistry" | "shaped_chemistry" | "smithing_transform" | "smithing_trim";
  recipe: {  recipe_id: LatinString;
  input: RecipeIngredient[];
  output: ItemLegacy[];
  uuid: string;
  block: string;
  priority: number;
  unlocking_requirement: RecipeUnlockingRequirement;
  network_id: number;} | {  recipe_id: LatinString;
  input: RecipeIngredient[];
  output: ItemLegacy[];
  uuid: string;
  block: string;
  priority: number;
  unlocking_requirement: RecipeUnlockingRequirement;
  network_id: number;} | {  recipe_id: LatinString;
  input: RecipeIngredient[];
  output: ItemLegacy[];
  uuid: string;
  block: string;
  priority: number;
  unlocking_requirement: RecipeUnlockingRequirement;
  network_id: number;} | {  recipe_id: LatinString;
  width: number;
  height: number;
  input: RecipeIngredient[][];
  output: ItemLegacy[];
  uuid: string;
  block: string;
  priority: number;
  assume_symmetry: boolean;
  unlocking_requirement: RecipeUnlockingRequirement;
  network_id: number;} | {  recipe_id: LatinString;
  width: number;
  height: number;
  input: RecipeIngredient[][];
  output: ItemLegacy[];
  uuid: string;
  block: string;
  priority: number;
  assume_symmetry: boolean;
  unlocking_requirement: RecipeUnlockingRequirement;
  network_id: number;} | {  input_id: number;
  output: ItemLegacy;
  block: string;} | {  input_id: number;
  input_meta: number;
  output: ItemLegacy;
  block: string;} | {  uuid: string;
  network_id: number;} | {  recipe_id: LatinString;
  template: RecipeIngredient;
  base: RecipeIngredient;
  addition: RecipeIngredient;
  result: ItemLegacy;
  tag: string;
  network_id: number;} | {  recipe_id: LatinString;
  template: RecipeIngredient;
  input: RecipeIngredient;
  addition: RecipeIngredient;
  block: string;
  network_id: number;};}[];
