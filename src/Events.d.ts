import type { AddBehaviorTreePacket } from "./generated/packet_add_behavior_tree";
import type { AddEntityPacket } from "./generated/packet_add_entity";
import type { AddItemEntityPacket } from "./generated/packet_add_item_entity";
import type { AddPaintingPacket } from "./generated/packet_add_painting";
import type { AddPlayerPacket } from "./generated/packet_add_player";
import type { AddVolumeEntityPacket } from "./generated/packet_add_volume_entity";
import type { AdventureSettingsPacket } from "./generated/packet_adventure_settings";
import type { AgentActionPacket } from "./generated/packet_agent_action";
import type { AgentAnimationPacket } from "./generated/packet_agent_animation";
import type { AnimatePacket } from "./generated/packet_animate";
import type { AnimateEntityPacket } from "./generated/packet_animate_entity";
import type { AnvilDamagePacket } from "./generated/packet_anvil_damage";
import type { AvailableCommandsPacket } from "./generated/packet_available_commands";
import type { AvailableEntityIdentifiersPacket } from "./generated/packet_available_entity_identifiers";
import type { AwardAchievementPacket } from "./generated/packet_award_achievement";
import type { BiomeDefinitionListPacket } from "./generated/packet_biome_definition_list";
import type { BlockEntityDataPacket } from "./generated/packet_block_entity_data";
import type { BlockEventPacket } from "./generated/packet_block_event";
import type { BlockPickRequestPacket } from "./generated/packet_block_pick_request";
import type { BookEditPacket } from "./generated/packet_book_edit";
import type { BossEventPacket } from "./generated/packet_boss_event";
import type { CameraPacket } from "./generated/packet_camera";
import type { CameraAimAssistPacket } from "./generated/packet_camera_aim_assist";
import type { CameraAimAssistPresetsPacket } from "./generated/packet_camera_aim_assist_presets";
import type { CameraInstructionPacket } from "./generated/packet_camera_instruction";
import type { CameraPresetsPacket } from "./generated/packet_camera_presets";
import type { CameraShakePacket } from "./generated/packet_camera_shake";
import type { ChangeDimensionPacket } from "./generated/packet_change_dimension";
import type { ChangeMobPropertyPacket } from "./generated/packet_change_mob_property";
import type { ChunkRadiusUpdatePacket } from "./generated/packet_chunk_radius_update";
import type { ClientCacheBlobStatusPacket } from "./generated/packet_client_cache_blob_status";
import type { ClientCacheMissResponsePacket } from "./generated/packet_client_cache_miss_response";
import type { ClientCacheStatusPacket } from "./generated/packet_client_cache_status";
import type { ClientCameraAimAssistPacket } from "./generated/packet_client_camera_aim_assist";
import type { ClientCheatAbilityPacket } from "./generated/packet_client_cheat_ability";
import type { ClientMovementPredictionSyncPacket } from "./generated/packet_client_movement_prediction_sync";
import type { ClientStartItemCooldownPacket } from "./generated/packet_client_start_item_cooldown";
import type { ClientToServerHandshakePacket } from "./generated/packet_client_to_server_handshake";
import type { ClientboundCloseFormPacket } from "./generated/packet_clientbound_close_form";
import type { ClientboundControlsSchemePacket } from "./generated/packet_clientbound_controls_scheme";
import type { ClientboundMapItemDataPacket } from "./generated/packet_clientbound_map_item_data";
import type { CodeBuilderPacket } from "./generated/packet_code_builder";
import type { CodeBuilderSourcePacket } from "./generated/packet_code_builder_source";
import type { CommandBlockUpdatePacket } from "./generated/packet_command_block_update";
import type { CommandOutputPacket } from "./generated/packet_command_output";
import type { CommandRequestPacket } from "./generated/packet_command_request";
import type { CompletedUsingItemPacket } from "./generated/packet_completed_using_item";
import type { CompressedBiomeDefinitionsPacket } from "./generated/packet_compressed_biome_definitions";
import type { ContainerClosePacket } from "./generated/packet_container_close";
import type { ContainerOpenPacket } from "./generated/packet_container_open";
import type { ContainerRegistryCleanupPacket } from "./generated/packet_container_registry_cleanup";
import type { ContainerSetDataPacket } from "./generated/packet_container_set_data";
import type { CorrectPlayerMovePredictionPacket } from "./generated/packet_correct_player_move_prediction";
import type { CraftingDataPacket } from "./generated/packet_crafting_data";
import type { CraftingEventPacket } from "./generated/packet_crafting_event";
import type { CreatePhotoPacket } from "./generated/packet_create_photo";
import type { CreativeContentPacket } from "./generated/packet_creative_content";
import type { CurrentStructureFeaturePacket } from "./generated/packet_current_structure_feature";
import type { DeathInfoPacket } from "./generated/packet_death_info";
import type { DebugInfoPacket } from "./generated/packet_debug_info";
import type { DebugRendererPacket } from "./generated/packet_debug_renderer";
import type { DimensionDataPacket } from "./generated/packet_dimension_data";
import type { DisconnectPacket } from "./generated/packet_disconnect";
import type { EditorNetworkPacket } from "./generated/packet_editor_network";
import type { EduUriResourcePacketPacket } from "./generated/packet_edu_uri_resource_packet";
import type { EducationSettingsPacket } from "./generated/packet_education_settings";
import type { EmotePacket } from "./generated/packet_emote";
import type { EmoteListPacket } from "./generated/packet_emote_list";
import type { EntityEventPacket } from "./generated/packet_entity_event";
import type { EntityPickRequestPacket } from "./generated/packet_entity_pick_request";
import type { EventPacket } from "./generated/packet_event";
import type { FeatureRegistryPacket } from "./generated/packet_feature_registry";
import type { FilterTextPacketPacket } from "./generated/packet_filter_text_packet";
import type { GameRulesChangedPacket } from "./generated/packet_game_rules_changed";
import type { GameTestRequestPacket } from "./generated/packet_game_test_request";
import type { GameTestResultsPacket } from "./generated/packet_game_test_results";
import type { GuiDataPickItemPacket } from "./generated/packet_gui_data_pick_item";
import type { HurtArmorPacket } from "./generated/packet_hurt_armor";
import type { InitiateWebSocketConnectionPacket } from "./generated/packet_initiate_web_socket_connection";
import type { InteractPacket } from "./generated/packet_interact";
import type { InventoryContentPacket } from "./generated/packet_inventory_content";
import type { InventorySlotPacket } from "./generated/packet_inventory_slot";
import type { InventoryTransactionPacket } from "./generated/packet_inventory_transaction";
import type { ItemRegistryPacket } from "./generated/packet_item_registry";
import type { ItemStackRequestPacket } from "./generated/packet_item_stack_request";
import type { ItemStackResponsePacket } from "./generated/packet_item_stack_response";
import type { JigsawStructureDataPacket } from "./generated/packet_jigsaw_structure_data";
import type { LabTablePacket } from "./generated/packet_lab_table";
import type { LecternUpdatePacket } from "./generated/packet_lectern_update";
import type { LessonProgressPacket } from "./generated/packet_lesson_progress";
import type { LevelChunkPacket } from "./generated/packet_level_chunk";
import type { LevelEventPacket } from "./generated/packet_level_event";
import type { LevelEventGenericPacket } from "./generated/packet_level_event_generic";
import type { LevelSoundEventPacket } from "./generated/packet_level_sound_event";
import type { LevelSoundEventOldPacket } from "./generated/packet_level_sound_event_old";
import type { LevelSoundEventV2Packet } from "./generated/packet_level_sound_event_v2";
import type { LoginPacket } from "./generated/packet_login";
import type { MapCreateLockedCopyPacket } from "./generated/packet_map_create_locked_copy";
import type { MapInfoRequestPacket } from "./generated/packet_map_info_request";
import type { MobArmorEquipmentPacket } from "./generated/packet_mob_armor_equipment";
import type { MobEffectPacket } from "./generated/packet_mob_effect";
import type { MobEquipmentPacket } from "./generated/packet_mob_equipment";
import type { ModalFormRequestPacket } from "./generated/packet_modal_form_request";
import type { ModalFormResponsePacket } from "./generated/packet_modal_form_response";
import type { MotionPredictionHintsPacket } from "./generated/packet_motion_prediction_hints";
import type { MoveEntityPacket } from "./generated/packet_move_entity";
import type { MoveEntityDeltaPacket } from "./generated/packet_move_entity_delta";
import type { MovePlayerPacket } from "./generated/packet_move_player";
import type { MovementEffectPacket } from "./generated/packet_movement_effect";
import type { MultiplayerSettingsPacket } from "./generated/packet_multiplayer_settings";
import type { NetworkChunkPublisherUpdatePacket } from "./generated/packet_network_chunk_publisher_update";
import type { NetworkSettingsPacket } from "./generated/packet_network_settings";
import type { NetworkStackLatencyPacket } from "./generated/packet_network_stack_latency";
import type { NpcDialoguePacket } from "./generated/packet_npc_dialogue";
import type { NpcRequestPacket } from "./generated/packet_npc_request";
import type { OnScreenTextureAnimationPacket } from "./generated/packet_on_screen_texture_animation";
import type { OpenSignPacket } from "./generated/packet_open_sign";
import type { PacketViolationWarningPacket } from "./generated/packet_packet_violation_warning";
import type { PhotoInfoRequestPacket } from "./generated/packet_photo_info_request";
import type { PhotoTransferPacket } from "./generated/packet_photo_transfer";
import type { PlaySoundPacket } from "./generated/packet_play_sound";
import type { PlayStatusPacket } from "./generated/packet_play_status";
import type { PlayerActionPacket } from "./generated/packet_player_action";
import type { PlayerArmorDamagePacket } from "./generated/packet_player_armor_damage";
import type { PlayerAuthInputPacket } from "./generated/packet_player_auth_input";
import type { PlayerEnchantOptionsPacket } from "./generated/packet_player_enchant_options";
import type { PlayerFogPacket } from "./generated/packet_player_fog";
import type { PlayerHotbarPacket } from "./generated/packet_player_hotbar";
import type { PlayerInputPacket } from "./generated/packet_player_input";
import type { PlayerListPacket } from "./generated/packet_player_list";
import type { PlayerLocationPacket } from "./generated/packet_player_location";
import type { PlayerSkinPacket } from "./generated/packet_player_skin";
import type { PlayerUpdateEntityOverridesPacket } from "./generated/packet_player_update_entity_overrides";
import type { PlayerVideoCapturePacket } from "./generated/packet_player_video_capture";
import type { PositionTrackingDbBroadcastPacket } from "./generated/packet_position_tracking_db_broadcast";
import type { PositionTrackingDbRequestPacket } from "./generated/packet_position_tracking_db_request";
import type { PurchaseReceiptPacket } from "./generated/packet_purchase_receipt";
import type { RefreshEntitlementsPacket } from "./generated/packet_refresh_entitlements";
import type { RemoveEntityPacket } from "./generated/packet_remove_entity";
import type { RemoveObjectivePacket } from "./generated/packet_remove_objective";
import type { RemoveVolumeEntityPacket } from "./generated/packet_remove_volume_entity";
import type { RequestAbilityPacket } from "./generated/packet_request_ability";
import type { RequestChunkRadiusPacket } from "./generated/packet_request_chunk_radius";
import type { RequestNetworkSettingsPacket } from "./generated/packet_request_network_settings";
import type { RequestPermissionsPacket } from "./generated/packet_request_permissions";
import type { ResourcePackChunkDataPacket } from "./generated/packet_resource_pack_chunk_data";
import type { ResourcePackChunkRequestPacket } from "./generated/packet_resource_pack_chunk_request";
import type { ResourcePackClientResponsePacket } from "./generated/packet_resource_pack_client_response";
import type { ResourcePackDataInfoPacket } from "./generated/packet_resource_pack_data_info";
import type { ResourcePackStackPacket } from "./generated/packet_resource_pack_stack";
import type { ResourcePacksInfoPacket } from "./generated/packet_resource_packs_info";
import type { RespawnPacket } from "./generated/packet_respawn";
import type { RiderJumpPacket } from "./generated/packet_rider_jump";
import type { ScriptCustomEventPacket } from "./generated/packet_script_custom_event";
import type { ScriptMessagePacket } from "./generated/packet_script_message";
import type { ServerPostMovePacket } from "./generated/packet_server_post_move";
import type { ServerScriptDebugDrawerPacket } from "./generated/packet_server_script_debug_drawer";
import type { ServerSettingsRequestPacket } from "./generated/packet_server_settings_request";
import type { ServerSettingsResponsePacket } from "./generated/packet_server_settings_response";
import type { ServerStatsPacket } from "./generated/packet_server_stats";
import type { ServerToClientHandshakePacket } from "./generated/packet_server_to_client_handshake";
import type { ServerboundDiagnosticsPacket } from "./generated/packet_serverbound_diagnostics";
import type { ServerboundLoadingScreenPacket } from "./generated/packet_serverbound_loading_screen";
import type { SetCommandsEnabledPacket } from "./generated/packet_set_commands_enabled";
import type { SetDefaultGameTypePacket } from "./generated/packet_set_default_game_type";
import type { SetDifficultyPacket } from "./generated/packet_set_difficulty";
import type { SetDisplayObjectivePacket } from "./generated/packet_set_display_objective";
import type { SetEntityDataPacket } from "./generated/packet_set_entity_data";
import type { SetEntityLinkPacket } from "./generated/packet_set_entity_link";
import type { SetEntityMotionPacket } from "./generated/packet_set_entity_motion";
import type { SetHealthPacket } from "./generated/packet_set_health";
import type { SetHudPacket } from "./generated/packet_set_hud";
import type { SetLastHurtByPacket } from "./generated/packet_set_last_hurt_by";
import type { SetLocalPlayerAsInitializedPacket } from "./generated/packet_set_local_player_as_initialized";
import type { SetMovementAuthorityPacket } from "./generated/packet_set_movement_authority";
import type { SetPlayerGameTypePacket } from "./generated/packet_set_player_game_type";
import type { SetPlayerInventoryOptionsPacket } from "./generated/packet_set_player_inventory_options";
import type { SetScorePacket } from "./generated/packet_set_score";
import type { SetScoreboardIdentityPacket } from "./generated/packet_set_scoreboard_identity";
import type { SetSpawnPositionPacket } from "./generated/packet_set_spawn_position";
import type { SetTimePacket } from "./generated/packet_set_time";
import type { SetTitlePacket } from "./generated/packet_set_title";
import type { SettingsCommandPacket } from "./generated/packet_settings_command";
import type { ShowCreditsPacket } from "./generated/packet_show_credits";
import type { ShowProfilePacket } from "./generated/packet_show_profile";
import type { ShowStoreOfferPacket } from "./generated/packet_show_store_offer";
import type { SimpleEventPacket } from "./generated/packet_simple_event";
import type { SimulationTypePacket } from "./generated/packet_simulation_type";
import type { SpawnExperienceOrbPacket } from "./generated/packet_spawn_experience_orb";
import type { SpawnParticleEffectPacket } from "./generated/packet_spawn_particle_effect";
import type { StartGamePacket } from "./generated/packet_start_game";
import type { StopSoundPacket } from "./generated/packet_stop_sound";
import type { StructureBlockUpdatePacket } from "./generated/packet_structure_block_update";
import type { StructureTemplateDataExportRequestPacket } from "./generated/packet_structure_template_data_export_request";
import type { StructureTemplateDataExportResponsePacket } from "./generated/packet_structure_template_data_export_response";
import type { SubClientLoginPacket } from "./generated/packet_sub_client_login";
import type { SubchunkPacket } from "./generated/packet_subchunk";
import type { SubchunkRequestPacket } from "./generated/packet_subchunk_request";
import type { SyncEntityPropertyPacket } from "./generated/packet_sync_entity_property";
import type { TakeItemEntityPacket } from "./generated/packet_take_item_entity";
import type { TextPacket } from "./generated/packet_text";
import type { TickSyncPacket } from "./generated/packet_tick_sync";
import type { TickingAreasLoadStatusPacket } from "./generated/packet_ticking_areas_load_status";
import type { ToastRequestPacket } from "./generated/packet_toast_request";
import type { ToggleCrafterSlotRequestPacket } from "./generated/packet_toggle_crafter_slot_request";
import type { TransferPacket } from "./generated/packet_transfer";
import type { TrimDataPacket } from "./generated/packet_trim_data";
import type { UnlockedRecipesPacket } from "./generated/packet_unlocked_recipes";
import type { UpdateAbilitiesPacket } from "./generated/packet_update_abilities";
import type { UpdateAdventureSettingsPacket } from "./generated/packet_update_adventure_settings";
import type { UpdateAttributesPacket } from "./generated/packet_update_attributes";
import type { UpdateBlockPacket } from "./generated/packet_update_block";
import type { UpdateBlockPropertiesPacket } from "./generated/packet_update_block_properties";
import type { UpdateBlockSyncedPacket } from "./generated/packet_update_block_synced";
import type { UpdateClientInputLocksPacket } from "./generated/packet_update_client_input_locks";
import type { UpdateClientOptionsPacket } from "./generated/packet_update_client_options";
import type { UpdateEquipmentPacket } from "./generated/packet_update_equipment";
import type { UpdatePlayerGameTypePacket } from "./generated/packet_update_player_game_type";
import type { UpdateSoftEnumPacket } from "./generated/packet_update_soft_enum";
import type { UpdateSubchunkBlocksPacket } from "./generated/packet_update_subchunk_blocks";
import type { UpdateTradePacket } from "./generated/packet_update_trade";
import type { VideoStreamConnectPacket } from "./generated/packet_video_stream_connect";

export interface Events {
  login: (packet: LoginPacket) => void;
  play_status: (packet: PlayStatusPacket) => void;
  server_to_client_handshake: (packet: ServerToClientHandshakePacket) => void;
  client_to_server_handshake: (packet: ClientToServerHandshakePacket) => void;
  disconnect: (packet: DisconnectPacket) => void;
  resource_packs_info: (packet: ResourcePacksInfoPacket) => void;
  resource_pack_stack: (packet: ResourcePackStackPacket) => void;
  resource_pack_client_response: (
    packet: ResourcePackClientResponsePacket,
  ) => void;
  text: (packet: TextPacket) => void;
  set_time: (packet: SetTimePacket) => void;
  start_game: (packet: StartGamePacket) => void;
  add_player: (packet: AddPlayerPacket) => void;
  add_entity: (packet: AddEntityPacket) => void;
  remove_entity: (packet: RemoveEntityPacket) => void;
  add_item_entity: (packet: AddItemEntityPacket) => void;
  take_item_entity: (packet: TakeItemEntityPacket) => void;
  move_entity: (packet: MoveEntityPacket) => void;
  move_player: (packet: MovePlayerPacket) => void;
  rider_jump: (packet: RiderJumpPacket) => void;
  update_block: (packet: UpdateBlockPacket) => void;
  add_painting: (packet: AddPaintingPacket) => void;
  tick_sync: (packet: TickSyncPacket) => void;
  level_sound_event_old: (packet: LevelSoundEventOldPacket) => void;
  level_event: (packet: LevelEventPacket) => void;
  block_event: (packet: BlockEventPacket) => void;
  entity_event: (packet: EntityEventPacket) => void;
  mob_effect: (packet: MobEffectPacket) => void;
  update_attributes: (packet: UpdateAttributesPacket) => void;
  inventory_transaction: (packet: InventoryTransactionPacket) => void;
  mob_equipment: (packet: MobEquipmentPacket) => void;
  mob_armor_equipment: (packet: MobArmorEquipmentPacket) => void;
  interact: (packet: InteractPacket) => void;
  block_pick_request: (packet: BlockPickRequestPacket) => void;
  entity_pick_request: (packet: EntityPickRequestPacket) => void;
  player_action: (packet: PlayerActionPacket) => void;
  hurt_armor: (packet: HurtArmorPacket) => void;
  set_entity_data: (packet: SetEntityDataPacket) => void;
  set_entity_motion: (packet: SetEntityMotionPacket) => void;
  set_entity_link: (packet: SetEntityLinkPacket) => void;
  set_health: (packet: SetHealthPacket) => void;
  set_spawn_position: (packet: SetSpawnPositionPacket) => void;
  animate: (packet: AnimatePacket) => void;
  respawn: (packet: RespawnPacket) => void;
  container_open: (packet: ContainerOpenPacket) => void;
  container_close: (packet: ContainerClosePacket) => void;
  player_hotbar: (packet: PlayerHotbarPacket) => void;
  inventory_content: (packet: InventoryContentPacket) => void;
  inventory_slot: (packet: InventorySlotPacket) => void;
  container_set_data: (packet: ContainerSetDataPacket) => void;
  crafting_data: (packet: CraftingDataPacket) => void;
  crafting_event: (packet: CraftingEventPacket) => void;
  gui_data_pick_item: (packet: GuiDataPickItemPacket) => void;
  adventure_settings: (packet: AdventureSettingsPacket) => void;
  block_entity_data: (packet: BlockEntityDataPacket) => void;
  player_input: (packet: PlayerInputPacket) => void;
  level_chunk: (packet: LevelChunkPacket) => void;
  set_commands_enabled: (packet: SetCommandsEnabledPacket) => void;
  set_difficulty: (packet: SetDifficultyPacket) => void;
  change_dimension: (packet: ChangeDimensionPacket) => void;
  set_player_game_type: (packet: SetPlayerGameTypePacket) => void;
  player_list: (packet: PlayerListPacket) => void;
  simple_event: (packet: SimpleEventPacket) => void;
  event: (packet: EventPacket) => void;
  spawn_experience_orb: (packet: SpawnExperienceOrbPacket) => void;
  clientbound_map_item_data: (packet: ClientboundMapItemDataPacket) => void;
  map_info_request: (packet: MapInfoRequestPacket) => void;
  request_chunk_radius: (packet: RequestChunkRadiusPacket) => void;
  chunk_radius_update: (packet: ChunkRadiusUpdatePacket) => void;
  game_rules_changed: (packet: GameRulesChangedPacket) => void;
  camera: (packet: CameraPacket) => void;
  boss_event: (packet: BossEventPacket) => void;
  show_credits: (packet: ShowCreditsPacket) => void;
  available_commands: (packet: AvailableCommandsPacket) => void;
  command_request: (packet: CommandRequestPacket) => void;
  command_block_update: (packet: CommandBlockUpdatePacket) => void;
  command_output: (packet: CommandOutputPacket) => void;
  update_trade: (packet: UpdateTradePacket) => void;
  update_equipment: (packet: UpdateEquipmentPacket) => void;
  resource_pack_data_info: (packet: ResourcePackDataInfoPacket) => void;
  resource_pack_chunk_data: (packet: ResourcePackChunkDataPacket) => void;
  resource_pack_chunk_request: (packet: ResourcePackChunkRequestPacket) => void;
  transfer: (packet: TransferPacket) => void;
  play_sound: (packet: PlaySoundPacket) => void;
  stop_sound: (packet: StopSoundPacket) => void;
  set_title: (packet: SetTitlePacket) => void;
  add_behavior_tree: (packet: AddBehaviorTreePacket) => void;
  structure_block_update: (packet: StructureBlockUpdatePacket) => void;
  show_store_offer: (packet: ShowStoreOfferPacket) => void;
  purchase_receipt: (packet: PurchaseReceiptPacket) => void;
  player_skin: (packet: PlayerSkinPacket) => void;
  sub_client_login: (packet: SubClientLoginPacket) => void;
  initiate_web_socket_connection: (
    packet: InitiateWebSocketConnectionPacket,
  ) => void;
  set_last_hurt_by: (packet: SetLastHurtByPacket) => void;
  book_edit: (packet: BookEditPacket) => void;
  npc_request: (packet: NpcRequestPacket) => void;
  photo_transfer: (packet: PhotoTransferPacket) => void;
  modal_form_request: (packet: ModalFormRequestPacket) => void;
  modal_form_response: (packet: ModalFormResponsePacket) => void;
  server_settings_request: (packet: ServerSettingsRequestPacket) => void;
  server_settings_response: (packet: ServerSettingsResponsePacket) => void;
  show_profile: (packet: ShowProfilePacket) => void;
  set_default_game_type: (packet: SetDefaultGameTypePacket) => void;
  remove_objective: (packet: RemoveObjectivePacket) => void;
  set_display_objective: (packet: SetDisplayObjectivePacket) => void;
  set_score: (packet: SetScorePacket) => void;
  lab_table: (packet: LabTablePacket) => void;
  update_block_synced: (packet: UpdateBlockSyncedPacket) => void;
  move_entity_delta: (packet: MoveEntityDeltaPacket) => void;
  set_scoreboard_identity: (packet: SetScoreboardIdentityPacket) => void;
  set_local_player_as_initialized: (
    packet: SetLocalPlayerAsInitializedPacket,
  ) => void;
  update_soft_enum: (packet: UpdateSoftEnumPacket) => void;
  network_stack_latency: (packet: NetworkStackLatencyPacket) => void;
  script_custom_event: (packet: ScriptCustomEventPacket) => void;
  spawn_particle_effect: (packet: SpawnParticleEffectPacket) => void;
  available_entity_identifiers: (
    packet: AvailableEntityIdentifiersPacket,
  ) => void;
  level_sound_event_v2: (packet: LevelSoundEventV2Packet) => void;
  network_chunk_publisher_update: (
    packet: NetworkChunkPublisherUpdatePacket,
  ) => void;
  biome_definition_list: (packet: BiomeDefinitionListPacket) => void;
  level_sound_event: (packet: LevelSoundEventPacket) => void;
  level_event_generic: (packet: LevelEventGenericPacket) => void;
  lectern_update: (packet: LecternUpdatePacket) => void;
  video_stream_connect: (packet: VideoStreamConnectPacket) => void;
  client_cache_status: (packet: ClientCacheStatusPacket) => void;
  on_screen_texture_animation: (packet: OnScreenTextureAnimationPacket) => void;
  map_create_locked_copy: (packet: MapCreateLockedCopyPacket) => void;
  structure_template_data_export_request: (
    packet: StructureTemplateDataExportRequestPacket,
  ) => void;
  structure_template_data_export_response: (
    packet: StructureTemplateDataExportResponsePacket,
  ) => void;
  update_block_properties: (packet: UpdateBlockPropertiesPacket) => void;
  client_cache_blob_status: (packet: ClientCacheBlobStatusPacket) => void;
  client_cache_miss_response: (packet: ClientCacheMissResponsePacket) => void;
  education_settings: (packet: EducationSettingsPacket) => void;
  emote: (packet: EmotePacket) => void;
  multiplayer_settings: (packet: MultiplayerSettingsPacket) => void;
  settings_command: (packet: SettingsCommandPacket) => void;
  anvil_damage: (packet: AnvilDamagePacket) => void;
  completed_using_item: (packet: CompletedUsingItemPacket) => void;
  network_settings: (packet: NetworkSettingsPacket) => void;
  player_auth_input: (packet: PlayerAuthInputPacket) => void;
  creative_content: (packet: CreativeContentPacket) => void;
  player_enchant_options: (packet: PlayerEnchantOptionsPacket) => void;
  item_stack_request: (packet: ItemStackRequestPacket) => void;
  item_stack_response: (packet: ItemStackResponsePacket) => void;
  player_armor_damage: (packet: PlayerArmorDamagePacket) => void;
  code_builder: (packet: CodeBuilderPacket) => void;
  update_player_game_type: (packet: UpdatePlayerGameTypePacket) => void;
  emote_list: (packet: EmoteListPacket) => void;
  position_tracking_db_request: (
    packet: PositionTrackingDbRequestPacket,
  ) => void;
  position_tracking_db_broadcast: (
    packet: PositionTrackingDbBroadcastPacket,
  ) => void;
  debug_info: (packet: DebugInfoPacket) => void;
  packet_violation_warning: (packet: PacketViolationWarningPacket) => void;
  motion_prediction_hints: (packet: MotionPredictionHintsPacket) => void;
  animate_entity: (packet: AnimateEntityPacket) => void;
  camera_shake: (packet: CameraShakePacket) => void;
  player_fog: (packet: PlayerFogPacket) => void;
  correct_player_move_prediction: (
    packet: CorrectPlayerMovePredictionPacket,
  ) => void;
  item_registry: (packet: ItemRegistryPacket) => void;
  filter_text_packet: (packet: FilterTextPacketPacket) => void;
  debug_renderer: (packet: DebugRendererPacket) => void;
  sync_entity_property: (packet: SyncEntityPropertyPacket) => void;
  add_volume_entity: (packet: AddVolumeEntityPacket) => void;
  remove_volume_entity: (packet: RemoveVolumeEntityPacket) => void;
  simulation_type: (packet: SimulationTypePacket) => void;
  npc_dialogue: (packet: NpcDialoguePacket) => void;
  edu_uri_resource_packet: (packet: EduUriResourcePacketPacket) => void;
  create_photo: (packet: CreatePhotoPacket) => void;
  update_subchunk_blocks: (packet: UpdateSubchunkBlocksPacket) => void;
  photo_info_request: (packet: PhotoInfoRequestPacket) => void;
  subchunk: (packet: SubchunkPacket) => void;
  subchunk_request: (packet: SubchunkRequestPacket) => void;
  client_start_item_cooldown: (packet: ClientStartItemCooldownPacket) => void;
  script_message: (packet: ScriptMessagePacket) => void;
  code_builder_source: (packet: CodeBuilderSourcePacket) => void;
  ticking_areas_load_status: (packet: TickingAreasLoadStatusPacket) => void;
  dimension_data: (packet: DimensionDataPacket) => void;
  agent_action: (packet: AgentActionPacket) => void;
  change_mob_property: (packet: ChangeMobPropertyPacket) => void;
  lesson_progress: (packet: LessonProgressPacket) => void;
  request_ability: (packet: RequestAbilityPacket) => void;
  request_permissions: (packet: RequestPermissionsPacket) => void;
  toast_request: (packet: ToastRequestPacket) => void;
  update_abilities: (packet: UpdateAbilitiesPacket) => void;
  update_adventure_settings: (packet: UpdateAdventureSettingsPacket) => void;
  death_info: (packet: DeathInfoPacket) => void;
  editor_network: (packet: EditorNetworkPacket) => void;
  feature_registry: (packet: FeatureRegistryPacket) => void;
  server_stats: (packet: ServerStatsPacket) => void;
  request_network_settings: (packet: RequestNetworkSettingsPacket) => void;
  game_test_request: (packet: GameTestRequestPacket) => void;
  game_test_results: (packet: GameTestResultsPacket) => void;
  update_client_input_locks: (packet: UpdateClientInputLocksPacket) => void;
  client_cheat_ability: (packet: ClientCheatAbilityPacket) => void;
  camera_presets: (packet: CameraPresetsPacket) => void;
  unlocked_recipes: (packet: UnlockedRecipesPacket) => void;
  camera_instruction: (packet: CameraInstructionPacket) => void;
  compressed_biome_definitions: (
    packet: CompressedBiomeDefinitionsPacket,
  ) => void;
  trim_data: (packet: TrimDataPacket) => void;
  open_sign: (packet: OpenSignPacket) => void;
  agent_animation: (packet: AgentAnimationPacket) => void;
  refresh_entitlements: (packet: RefreshEntitlementsPacket) => void;
  toggle_crafter_slot_request: (packet: ToggleCrafterSlotRequestPacket) => void;
  set_player_inventory_options: (
    packet: SetPlayerInventoryOptionsPacket,
  ) => void;
  set_hud: (packet: SetHudPacket) => void;
  award_achievement: (packet: AwardAchievementPacket) => void;
  server_post_move: (packet: ServerPostMovePacket) => void;
  clientbound_close_form: (packet: ClientboundCloseFormPacket) => void;
  serverbound_loading_screen: (packet: ServerboundLoadingScreenPacket) => void;
  jigsaw_structure_data: (packet: JigsawStructureDataPacket) => void;
  current_structure_feature: (packet: CurrentStructureFeaturePacket) => void;
  serverbound_diagnostics: (packet: ServerboundDiagnosticsPacket) => void;
  camera_aim_assist: (packet: CameraAimAssistPacket) => void;
  container_registry_cleanup: (packet: ContainerRegistryCleanupPacket) => void;
  movement_effect: (packet: MovementEffectPacket) => void;
  set_movement_authority: (packet: SetMovementAuthorityPacket) => void;
  camera_aim_assist_presets: (packet: CameraAimAssistPresetsPacket) => void;
  client_camera_aim_assist: (packet: ClientCameraAimAssistPacket) => void;
  client_movement_prediction_sync: (
    packet: ClientMovementPredictionSyncPacket,
  ) => void;
  update_client_options: (packet: UpdateClientOptionsPacket) => void;
  player_video_capture: (packet: PlayerVideoCapturePacket) => void;
  player_update_entity_overrides: (
    packet: PlayerUpdateEntityOverridesPacket,
  ) => void;
  player_location: (packet: PlayerLocationPacket) => void;
  clientbound_controls_scheme: (
    packet: ClientboundControlsSchemePacket,
  ) => void;
  server_script_debug_drawer: (packet: ServerScriptDebugDrawerPacket) => void;
  session: () => void;
  close: () => void;
  error: () => void;
  disconnect: () => void;
  connect_allowed: () => void;
}
